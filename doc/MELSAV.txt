.Load Save

Lbl LSAV {
    .Loads a save file
    .Directly returns the load status (0 good, higher bad)

    .Getting pointer to save data
    GetCalc(Str1FSAVE)->SF

    .Exiting if that failed
    !If SF
        2Return
    End

    .Making sure the world file's checksum matches the save file's checksum
    CCSM()
    For(G,0,9)
        {S-10+G}->H
        If {SF+8+G}!=H
            4Return
        End
    End

    .Getting virtual file pointers
    {SF}^r+SF->EM
    {SF+2}^r+SF->CE
    {SF+4}^r+SF->EP
    {SF+6}^r+SF->UN

    .Getting map dimensions
    {EM}->MW
    {EM+1}->MH

    .(return)
    0Return
}

Lbl LARC {
    .Loads the archived world file
    .Returns the load status (0 good, higher bad)

    .Loading the world file (returning 1 if that fails)
    GetCalc(Str1FWORL,Y_1)->G
    !If G
        1Return
    End

    .Getting virtual file pointers
    {Y_1}^r->IM
    {Y_1+2}^r->ID
    {Y_1+4}^r->HM
    {Y_1+6}^r->OM
    {Y_1+8}^r->ST

    0Return
}

Lbl CCSM {
    .Calculate checksum of the world file
    .Places the checksum in the 10 bytes below the stack pointer

    .Getting file sizes
    IMWO(-2)->G    .map size
    IDWO(-2)->H    .idat size
    STWO(-2)->I    .strs size

    .Putting checksums below stack pointer
    IMWO(G)->{S-10}^r
    IDWO(H)->{S-8}^r
    HMWO(G)->{S-6}^r
    OMWO(G)->{S-4}^r
    STWO(I)->{S-2}^r

    Return
}
