.Game MVEF

Lbl MVEF {
    .Fully moves an entity (game version)
    .   (This version is used in the final game - draws between ticks)
    .r1: Entity pointer
    .r2: DispX
    .r3: DispY
    .r4: Layers of indirection from player push

    .Allocating stack
    SSRG()

    .Resetting queueing variables
    QB->MQ
    0->NM

    .Moving the original entity
    MVEN()

    .A is now the number of actions in the previous queue frame
    0->A

    .Performing successive movements
    While NM
        .Moving next queue frame into the stack
        A*5->G
        NM*5->H
        G-H+S->S
        Copy(MQ,S,H)

        .Storing the previous number of frame actions in A
        NM->A

        .Redrawing the screen between ticks
        .   The double DispGraph^r maintains draw parity.
        DRPL()
        DispGraph^r
        DispGraph^r

        .Advancing a single tick
        MVET(A)
    End

    .Restoring stack
    A*5+S->S
    RSRG()

    Return
}
