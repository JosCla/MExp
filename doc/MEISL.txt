.MEISLAND

.main function
L_1+500->S

.Loading the save
sub(FSTR)
sub(LSAV)
If T
    ClrHome
    Disp "ERR LSAV"
    Output(0,1)
    Disp T>Dec
    Repeat getKey(15)
    End
    Return
End

.Loading and unloading a few islands
sub(LISL,1)
sub(LISL,4)
sub(LISL,3)
sub(UISL,4)
sub(LISL,2)
sub(LISL,4)
.sub(LISL,3) .TODO: how to prevent double-loading islands

.Going through first 10 entities, displaying them if they exist
For(A,0,9)
    ClrHome

    .B = type (255 if doesn't exist)
    {A*8+L_1}->B
    Output(0,0,B>Dec)
    Output(5,0,A>Dec)
    If B!=255
        .Outputting other props if exists
        For(C,1,7)
            Output(0,C,{A*8+C+L_1}>Dec)
        End
    End

    Repeat getKey(15)
    End
End

.other files (comment out when compiling!)
prgmMESSRC

Lbl LISL {
    .Loads a particular island
    .r1: Island id to load

    .Allocating stack space
    S-2->S
    A->{S}^r
    
    .Getting head pointer to entity linked list
    {r_1*2+CE}^r->A
    
    .Traversing the linked list of entities
    While A
        .Loading the current entity
        sub(LENT,A+CE)

        .Getting the pointer to the next entity
        {A+10+CE}^r->A
    End

    .Recovering the stack
    {S}^r->A
    S+2->S
}

Lbl UISL {
    .Unloads an island
    .r1: Island id to unload

    .Going through all active entities, and removing those in this island
    For(G,0,39)
        .If the entity is from the island in question, set their type to 255
        .  (this marks them as not existing anymore)
        If {G*8+3+L_1}=r_1
            255->{G*8+L_1}
        End
    End
}

Lbl GLIS {
    .Get loading status of island
}

Lbl LENT {
    .Loads an entity into the world
    .r1: Pointer to entity to load

    .Seeking first empty slot
    .We use T here because we will return the slot the new entity occupies
    For(T,0,39)
        .If the entity type is marked as 255, we have an empty
        If {T*8+L_1}=255
            Goto LENT1 .(break)
        End
    End
    Lbl LENT1

    .Copying in the entity
    Copy(r_1, T*8+L_1, 8)

    .(return)
    Return
}
