.MEXP Main File

.Prerequisites
L_1+768->S
prgmMESTAT
0->CP
0->RU

.Trying to load the world file (exiting if this fails)
LARC()->G
If G
    DERR(G)
    Return
End

.Trying to load the save file (it's okay if this fails)
LSAV()->A

.(goto point for accessing the main menu
Lbl MEXPMENU

.Main menu
ClrHomeClrDraw^r^r
MMEN(A)->B
.(If B=0 condition is continue game; just do nothing)
If B=1
    .New Game
    CSAV()->G
    If G
        DERR(G)
        Goto MEXPMENU
    End
ElseIf B=2
    .Exit
    Return
End

.Drawing the screen for the first time
DRPL()

.Main repeat loop
Repeat getKey(15)
    .DispGraph with parity
    DGWP()

    .Potential island reset code
    0->C

    .Checking for player inputs
    If getKey(1)
        MVPL(0,1)
    ElseIf getKey(2)
        MVPL(-1,0)
    ElseIf getKey(3)
        MVPL(1,0)
    ElseIf getKey(4)
        MVPL(0,-1)
    ElseIf getKey(54)
        1->C
    ElseIf getKey(48)
        DGUP(1)
        UNDO()
        DRPL()
    ElseIf getKey(10)
        6->C .jump to backward island
    ElseIf getKey(11)
        5->C .jump to forward island
    End

    If C
        GCEP(0)->G
        GEIA({G+1},{G+2})->G
        If C>1
            IDWO(G*2)->G
            IDBY(G+C)->G
        End
        STUN()
        RSTI(G)
        FIUN()
        DRPL()
    End
End
Return

Lbl MVPL {
    .Moves the player by a given offset
    .r1: MoveX
    .r2: MoveY

    .Stashing args
    r_1->A
    r_2->B

    .Drawing to a parity of 1
    DGUP(1)

    .Start recording undo
    STUN()

    .Moving the player
    GCEP(0)->G
    MVEI(G,A,B,0)

    .Finish recording undo
    FIUN()

    .Drawing the screen
    DRPL()

    Return
}

.Dependencies
prgmMECEUT
prgmMEDRAW
prgmMEEUTL
prgmMEGDUT
prgmMEGMVF
prgmMELSAV
prgmMEMVEI
prgmMEMVEN
prgmMEMVER
prgmMEMVET
prgmMERSTI
prgmMETEXT
prgmMEUNDO
prgmMEUTIL
prgmMEWORL
